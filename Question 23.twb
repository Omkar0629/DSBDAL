<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='adult' inline='true' name='federated.06ird2l0h206aq180hm4f02cb60m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='adult' name='textscan.0hzrhwq0ebzndx156a7gh0ovtxa9'>
            <connection class='textscan' directory='E:/SEM_6/DSBDAL/Final Practical' filename='adult.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hzrhwq0ebzndx156a7gh0ovtxa9' name='adult.csv' table='[adult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='age' ordinal='1' />
            <column datatype='string' name='workclass' ordinal='2' />
            <column datatype='integer' name='fnlwgt' ordinal='3' />
            <column datatype='string' name='education' ordinal='4' />
            <column datatype='integer' name='education-num' ordinal='5' />
            <column datatype='string' name='marital-status' ordinal='6' />
            <column datatype='string' name='occupation' ordinal='7' />
            <column datatype='string' name='relationship' ordinal='8' />
            <column datatype='string' name='race' ordinal='9' />
            <column datatype='string' name='sex' ordinal='10' />
            <column datatype='integer' name='capital-gain' ordinal='11' />
            <column datatype='integer' name='capital-loss' ordinal='12' />
            <column datatype='integer' name='hours-per-week' ordinal='13' />
            <column datatype='string' name='native-country' ordinal='14' />
            <column datatype='string' name='target' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hzrhwq0ebzndx156a7gh0ovtxa9' name='adult.csv' table='[adult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='age' ordinal='1' />
            <column datatype='string' name='workclass' ordinal='2' />
            <column datatype='integer' name='fnlwgt' ordinal='3' />
            <column datatype='string' name='education' ordinal='4' />
            <column datatype='integer' name='education-num' ordinal='5' />
            <column datatype='string' name='marital-status' ordinal='6' />
            <column datatype='string' name='occupation' ordinal='7' />
            <column datatype='string' name='relationship' ordinal='8' />
            <column datatype='string' name='race' ordinal='9' />
            <column datatype='string' name='sex' ordinal='10' />
            <column datatype='integer' name='capital-gain' ordinal='11' />
            <column datatype='integer' name='capital-loss' ordinal='12' />
            <column datatype='integer' name='hours-per-week' ordinal='13' />
            <column datatype='string' name='native-country' ordinal='14' />
            <column datatype='string' name='target' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workclass</remote-name>
            <remote-type>129</remote-type>
            <local-name>[workclass]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>workclass</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fnlwgt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fnlwgt]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>fnlwgt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>education</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education-num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[education-num]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>education-num</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marital-status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[marital-status]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>marital-status</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occupation]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>occupation</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>relationship</remote-name>
            <remote-type>129</remote-type>
            <local-name>[relationship]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>relationship</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[race]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>sex</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital-gain</remote-name>
            <remote-type>20</remote-type>
            <local-name>[capital-gain]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>capital-gain</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital-loss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[capital-loss]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>capital-loss</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hours-per-week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hours-per-week]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>hours-per-week</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>native-country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[native-country]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>native-country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target]</local-name>
            <parent-name>[adult.csv]</parent-name>
            <remote-alias>target</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='adult.csv' datatype='table' name='[__tableau_internal_object_id__].[adult.csv_7F2B431949CC4F84A5067E32E90E6D20]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Capital-Gain' datatype='integer' name='[capital-gain]' role='measure' type='quantitative' />
      <column caption='Capital-Loss' datatype='integer' name='[capital-loss]' role='measure' type='quantitative' />
      <column caption='Education-Num' datatype='integer' name='[education-num]' role='dimension' type='ordinal' />
      <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
      <column caption='Fnlwgt' datatype='integer' name='[fnlwgt]' role='measure' type='quantitative' />
      <column caption='Hours-Per-Week' datatype='integer' name='[hours-per-week]' role='measure' type='quantitative' />
      <column caption='Marital-Status' datatype='string' name='[marital-status]' role='dimension' type='nominal' />
      <column caption='Native-Country' datatype='string' name='[native-country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Occupation' datatype='string' name='[occupation]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
      <column caption='Relationship' datatype='string' name='[relationship]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Sex' datatype='string' default-role='measure' default-type='quantitative' name='[sex]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='CountD' caption='Target' datatype='string' default-role='measure' default-type='quantitative' name='[target]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Workclass' datatype='string' name='[workclass]' role='dimension' type='nominal' />
      <column-instance column='[workclass]' derivation='None' name='[none:workclass:nk]' pivot='key' type='nominal' />
      <group caption='Workclass Set' name='[Workclass Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:workclass:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:workclass:nk]' member='&quot;?&quot;' />
            <groupfilter function='member' level='[none:workclass:nk]' member='&quot;Federal-gov&quot;' />
            <groupfilter function='member' level='[none:workclass:nk]' member='&quot;Local-gov&quot;' />
            <groupfilter function='member' level='[none:workclass:nk]' member='&quot;State-gov&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='adult.csv' id='adult.csv_7F2B431949CC4F84A5067E32E90E6D20'>
            <properties context=''>
              <relation connection='textscan.0hzrhwq0ebzndx156a7gh0ovtxa9' name='adult.csv' table='[adult#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='age' ordinal='1' />
                  <column datatype='string' name='workclass' ordinal='2' />
                  <column datatype='integer' name='fnlwgt' ordinal='3' />
                  <column datatype='string' name='education' ordinal='4' />
                  <column datatype='integer' name='education-num' ordinal='5' />
                  <column datatype='string' name='marital-status' ordinal='6' />
                  <column datatype='string' name='occupation' ordinal='7' />
                  <column datatype='string' name='relationship' ordinal='8' />
                  <column datatype='string' name='race' ordinal='9' />
                  <column datatype='string' name='sex' ordinal='10' />
                  <column datatype='integer' name='capital-gain' ordinal='11' />
                  <column datatype='integer' name='capital-loss' ordinal='12' />
                  <column datatype='integer' name='hours-per-week' ordinal='13' />
                  <column datatype='string' name='native-country' ordinal='14' />
                  <column datatype='string' name='target' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Age wise education vs target'>
      <table>
        <view>
          <datasources>
            <datasource caption='adult' name='federated.06ird2l0h206aq180hm4f02cb60m' />
          </datasources>
          <datasource-dependencies datasource='federated.06ird2l0h206aq180hm4f02cb60m'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Avg' name='[avg:age:qk]' pivot='key' type='quantitative' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[target]' derivation='None' name='[none:target:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Target' datatype='string' default-role='measure' default-type='quantitative' name='[target]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:age:ok]'>
            <groupfilter from='17' function='range' level='[none:age:ok]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:age:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk] * [federated.06ird2l0h206aq180hm4f02cb60m].[avg:age:qk])</rows>
        <cols>[federated.06ird2l0h206aq180hm4f02cb60m].[none:education:nk]</cols>
      </table>
      <simple-id uuid='{73830BE6-A734-4C81-A016-8F4382DFB085}' />
    </worksheet>
    <worksheet name='Country wise statistics'>
      <table>
        <view>
          <datasources>
            <datasource caption='adult' name='federated.06ird2l0h206aq180hm4f02cb60m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06ird2l0h206aq180hm4f02cb60m'>
            <column caption='Capital-Gain' datatype='integer' name='[capital-gain]' role='measure' type='quantitative' />
            <column caption='Native-Country' datatype='string' name='[native-country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[native-country]' derivation='None' name='[none:native-country:nk]' pivot='key' type='nominal' />
            <column-instance column='[workclass]' derivation='None' name='[none:workclass:nk]' pivot='key' type='nominal' />
            <column-instance column='[capital-gain]' derivation='Sum' name='[sum:capital-gain:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Workclass' datatype='string' name='[workclass]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:native-country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:native-country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:native-country:nk]' member='&quot;?&quot;' />
                <groupfilter function='member' level='[none:native-country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:native-country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:native-country:nk]' />
              <color column='[federated.06ird2l0h206aq180hm4f02cb60m].[sum:capital-gain:qk]' />
              <geometry column='[federated.06ird2l0h206aq180hm4f02cb60m].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk] * [federated.06ird2l0h206aq180hm4f02cb60m].[Latitude (generated)])</rows>
        <cols>[federated.06ird2l0h206aq180hm4f02cb60m].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{67C79169-1420-4730-8C98-78EA74FC3FEE}' />
    </worksheet>
    <worksheet name='Income Class based on Education masters and doctorate'>
      <table>
        <view>
          <datasources>
            <datasource caption='adult' name='federated.06ird2l0h206aq180hm4f02cb60m' />
          </datasources>
          <datasource-dependencies datasource='federated.06ird2l0h206aq180hm4f02cb60m'>
            <column caption='Capital-Gain' datatype='integer' name='[capital-gain]' role='measure' type='quantitative' />
            <column caption='Education' datatype='string' name='[education]' role='dimension' type='nominal' />
            <column-instance column='[education]' derivation='None' name='[none:education:nk]' pivot='key' type='nominal' />
            <column-instance column='[target]' derivation='None' name='[none:target:nk]' pivot='key' type='nominal' />
            <column-instance column='[workclass]' derivation='None' name='[none:workclass:nk]' pivot='key' type='nominal' />
            <column-instance column='[capital-gain]' derivation='Sum' name='[sum:capital-gain:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Target' datatype='string' default-role='measure' default-type='quantitative' name='[target]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Workclass' datatype='string' name='[workclass]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:education:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:education:nk]' member='&quot;Doctorate&quot;' />
              <groupfilter function='member' level='[none:education:nk]' member='&quot;Masters&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:education:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.06ird2l0h206aq180hm4f02cb60m].[none:education:nk] / ([federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk] / [federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]))</rows>
        <cols>[federated.06ird2l0h206aq180hm4f02cb60m].[sum:capital-gain:qk]</cols>
      </table>
      <simple-id uuid='{C2642BE3-9C33-47FA-923D-48740EC2C7DE}' />
    </worksheet>
    <worksheet name='Income class based on workclass'>
      <table>
        <view>
          <datasources>
            <datasource caption='adult' name='federated.06ird2l0h206aq180hm4f02cb60m' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06ird2l0h206aq180hm4f02cb60m'>
            <column caption='Capital-Gain' datatype='integer' name='[capital-gain]' role='measure' type='quantitative' />
            <column-instance column='[occupation]' derivation='None' name='[none:occupation:nk]' pivot='key' type='nominal' />
            <column-instance column='[target]' derivation='None' name='[none:target:nk]' pivot='key' type='nominal' />
            <column-instance column='[workclass]' derivation='None' name='[none:workclass:nk]' pivot='key' type='nominal' />
            <column caption='Occupation' datatype='string' name='[occupation]' role='dimension' type='nominal' />
            <column-instance column='[capital-gain]' derivation='Sum' name='[sum:capital-gain:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Target' datatype='string' default-role='measure' default-type='quantitative' name='[target]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Workclass' datatype='string' name='[workclass]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:occupation:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:occupation:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:occupation:nk]' member='&quot;?&quot;' />
                <groupfilter function='member' level='[none:occupation:nk]' member='&quot;Priv-house-serv&quot;' />
                <groupfilter function='member' level='[none:occupation:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:workclass:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:workclass:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:workclass:nk]' member='&quot;Federal-gov&quot;' />
                  <groupfilter function='member' level='[none:workclass:nk]' member='&quot;Local-gov&quot;' />
                  <groupfilter function='member' level='[none:workclass:nk]' member='&quot;State-gov&quot;' />
                  <groupfilter function='member' level='[none:workclass:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</column>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:occupation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6921546459197998' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06ird2l0h206aq180hm4f02cb60m].[sum:capital-gain:qk]</rows>
        <cols>([federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk] / [federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk])</cols>
      </table>
      <simple-id uuid='{B7609E58-6930-4518-A321-07FC2DFF2FEC}' />
    </worksheet>
    <worksheet name='Private workclass income class'>
      <table>
        <view>
          <datasources>
            <datasource caption='adult' name='federated.06ird2l0h206aq180hm4f02cb60m' />
          </datasources>
          <datasource-dependencies datasource='federated.06ird2l0h206aq180hm4f02cb60m'>
            <column caption='Capital-Gain' datatype='integer' name='[capital-gain]' role='measure' type='quantitative' />
            <column-instance column='[target]' derivation='None' name='[none:target:nk]' pivot='key' type='nominal' />
            <column-instance column='[workclass]' derivation='None' name='[none:workclass:nk]' pivot='key' type='nominal' />
            <column-instance column='[capital-gain]' derivation='Sum' name='[sum:capital-gain:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Target' datatype='string' default-role='measure' default-type='quantitative' name='[target]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Workclass' datatype='string' name='[workclass]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:workclass:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:workclass:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:workclass:nk]' member='&quot;Private&quot;' />
                  <groupfilter function='member' level='[none:workclass:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk] / [federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk])</rows>
        <cols>[federated.06ird2l0h206aq180hm4f02cb60m].[sum:capital-gain:qk]</cols>
      </table>
      <simple-id uuid='{B2AACC5D-096D-4F3A-A948-BF9EA1772470}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Income Class based on Education masters and doctorate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:education:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6DC3EF4-3BAD-4DE2-89AF-191D25B31CC6}' />
    </window>
    <window class='worksheet' name='Private workclass income class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:race:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE20CB5B-EF10-4A8B-BC8B-3D5A00FB460E}' />
    </window>
    <window class='worksheet' maximized='true' name='Country wise statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06ird2l0h206aq180hm4f02cb60m].[sum:capital-gain:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:native-country:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE7ABC8A-CE0F-4AFC-B37D-EE6BAEB03D76}' />
    </window>
    <window class='worksheet' name='Age wise education vs target'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[avg:age:qk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:age:ok]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A59AC76-6066-4ED2-B644-4D59AC3E8AD6}' />
    </window>
    <window class='worksheet' name='Income class based on workclass'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[io:Workclass Set:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:native-country:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:occupation:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:sex:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:target:nk]</field>
            <field>[federated.06ird2l0h206aq180hm4f02cb60m].[none:workclass:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40540DB0-A98D-439F-BDD3-278C5831D10B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age wise education vs target' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Country wise statistics' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Income Class based on Education masters and doctorate' width='192'>
      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
      4O3j/wetf3+zcvDXEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Income class based on workclass' width='192'>
      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
      OsWqQBRDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='127' name='Private workclass income class' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
